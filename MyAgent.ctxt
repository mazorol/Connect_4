#BlueJ class context
comment0.params=game\ iAmRed
comment0.target=MyAgent(Connect4Game,\ boolean)
comment0.text=\r\n\ Constructs\ a\ new\ agent,\ giving\ it\ the\ game\ and\ telling\ it\ whether\ it\ is\ Red\ or\ Yellow.\r\n\r\n\ @param\ game\ \ \ The\ game\ the\ agent\ will\ be\ playing.\r\n\ @param\ iAmRed\ True\ if\ the\ agent\ is\ Red,\ False\ if\ the\ agent\ is\ Yellow.\r\n
comment1.params=
comment1.target=void\ move()
comment1.text=\r\n\ The\ move\ method\ is\ run\ every\ time\ it\ is\ this\ agent's\ turn\ in\ the\ game.\ You\ may\ assume\ that\r\n\ when\ move()\ is\ called,\ the\ game\ has\ at\ least\ one\ open\ slot\ for\ a\ token,\ and\ the\ game\ has\ not\r\n\ already\ been\ won.\r\n\r\n\ By\ the\ end\ of\ the\ move\ method,\ the\ agent\ should\ have\ placed\ one\ token\ into\ the\ game\ at\ some\r\n\ point.\r\n\r\n\ After\ the\ move()\ method\ is\ called,\ the\ game\ engine\ will\ check\ to\ make\ sure\ the\ move\ was\r\n\ valid.\ A\ move\ might\ be\ invalid\ if\:\r\n\ -\ No\ token\ was\ place\ into\ the\ game.\r\n\ -\ More\ than\ one\ token\ was\ placed\ into\ the\ game.\r\n\ -\ A\ previous\ token\ was\ removed\ from\ the\ game.\r\n\ -\ The\ color\ of\ a\ previous\ token\ was\ changed.\r\n\ -\ There\ are\ empty\ spaces\ below\ where\ the\ token\ was\ placed.\r\n\r\n\ If\ an\ invalid\ move\ is\ made,\ the\ game\ engine\ will\ announce\ it\ and\ the\ game\ will\ be\ ended.\r\n\r\n
comment10.params=amIRed\ columnNumber\ slotNumber\ counterNumber
comment10.target=boolean\ checkDiagonalBackSlash(boolean,\ int,\ int,\ int)
comment10.text=\r\n\ Checks\ for\ a\ diagonal\ back\ slash\ move\ and\ returns\ true\ if\ a\ valid\ diagonal\ back\ slash\r\n\ move\ is\ available.\ Counts\ the\ number\ of\ tokens\ in\ the\ current\ column\ first\ to\ the\ lower-right,\r\n\ then\ to\ the\ upper-left\ that\ match\ the\ agent's\ color.\ The\ number\ of\ tokens\ to\ count\ is\ passed\r\n\ in\ with\ counterNumber.\ If\ counterNumber\ is\ met,\ then\ returns\ true.\r\n\r\n\ @param\ amIRed\ Agent\ color\r\n\ @param\ columnNumber\ Current\ column\ number\r\n\ @param\ slotNumber\ Current\ slot\ number\r\n\ @param\ counterNumber\ Number\ of\ tokens\ to\ count\ to\r\n\ @return\ true\ if\ diagonal\ back\ slash(\\)\ move\ is\ available\ on\ current\ column\r\n
comment11.params=
comment11.target=void\ moveOnRandom()
comment11.text=\r\n\ Returns\ a\ random\ valid\ move.\ If\ your\ agent\ doesn't\ know\ what\ to\ do,\ making\ a\ random\ move\r\n\ can\ allow\ the\ game\ to\ go\ on\ anyway.\r\n\r\n\ @return\ a\ random\ valid\ move.\r\n
comment12.params=columnNumber
comment12.target=void\ moveOnColumn(int)
comment12.text=\r\n\ Drops\ a\ token\ into\ a\ particular\ column\ so\ that\ it\ will\ fall\ to\ the\ bottom\ of\ the\ column.\r\n\ If\ the\ column\ is\ already\ full,\ nothing\ will\ change.\r\n\r\n\ @param\ columnNumber\ The\ column\ into\ which\ to\ drop\ the\ token.\r\n
comment13.params=column
comment13.target=int\ getLowestEmptyIndex(Connect4Column)
comment13.text=\r\n\ Returns\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column.\r\n\r\n\ @param\ column\ The\ column\ to\ check.\r\n\ @return\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column;\ -1\ if\ the\ column\ is\ already\ full.\r\n
comment14.params=column\ slot\ iAmRed
comment14.target=boolean\ isMyColor(int,\ int,\ boolean)
comment14.text=\r\n\ Checks\ if\ slot\ matches\ agent's\ color\r\n\r\n\ @param\ column\ The\ column\ to\ check\r\n\ @param\ slot\ \ \ The\ slot\ to\ check\r\n\ @param\ iAmRed\ Agent\ color\r\n\ @return\ True\ if\ the\ token\ color\ matches\ the\ agent\ color\r\n
comment15.params=columnNumber\ slotNumber
comment15.target=boolean\ isSlotOutOfBounds(int,\ int)
comment15.text=\r\n\ Checks\ if\ the\ slot\ is\ out\ of\ bounds\ of\ the\ game\ board\r\n\r\n\ @param\ columnNumber\ The\ column\ to\ check\r\n\ @param\ slotNumber\ \ \ The\ slot\ to\ check\r\n\ @return\ True\ if\ the\ slot\ is\ out\ of\ game\ board\ bounds\r\n
comment16.params=column\ slot
comment16.target=boolean\ isFilled(int,\ int)
comment16.text=\r\n\ Checks\ if\ slot\ is\ filled\ with\ a\ token\r\n\r\n\ @param\ column\ The\ column\ to\ check\r\n\ @param\ slot\ \ \ The\ slot\ to\ check\r\n\ @return\ True\ if\ the\ slot\ is\ filled\r\n
comment17.params=column\ slot
comment17.target=boolean\ isRed(int,\ int)
comment17.text=\r\n\ Checks\ if\ token\ in\ slot\ is\ red\r\n\r\n\ @param\ column\ The\ column\ to\ check\r\n\ @param\ slot\ \ \ The\ slot\ to\ check\r\n\ @return\ True\ if\ the\ slot\ is\ red\r\n
comment18.params=column\ slot
comment18.target=boolean\ isYellow(int,\ int)
comment18.text=\r\n\ Checks\ if\ token\ in\ slot\ is\ yellow\r\n\r\n\ @param\ column\ The\ column\ to\ check\r\n\ @param\ slot\ \ \ The\ slot\ to\ check\r\n\ @return\ True\ if\ the\ slot\ is\ yellow\r\n
comment19.params=
comment19.target=java.lang.String\ getName()
comment19.text=\r\n\ Returns\ the\ name\ of\ this\ agent.\r\n\r\n\ @return\ the\ agent's\ name\r\n
comment2.params=
comment2.target=void\ initialMove()
comment2.text=\r\n\ Moves\ on\ middle\ column\ of\ board\r\n
comment3.params=
comment3.target=int\ getBestColumnToMove()
comment3.text=\r\n\ Determines\ the\ best\ column\ to\ move\ on.\ For\ the\ lowest\ empty\ index\ of\ the\ current\ column\ it\r\n\ will\ first\ look\ for\ a\ win\ move,\ then\ will\ look\ if\ the\ opponent\ has\ a\ win\ move\ to\ block,\r\n\ next\ look\ for\ the\ best\ strategy\ move\ which\ is\ the\ column\ with\ the\ most\ clusters\ of\ the\r\n\ agent's\ color\ for\ offense\ and\ then\ opponent's\ color\ for\ defense\ (first\ clusters\ of\ 2,\ then\ 1),\r\n\ next\ it\ will\ look\ for\ 2\ tokens\ in\ a\ row\ of\ agent's\ color\ to\ create\ 3-in-a-row,\ then\ lastly\r\n\ look\ for\ 1\ token\ of\ agent's\ color\ to\ make\ 2-in-a-row\r\n\r\n\ @return\ The\ index\ number\ of\ the\ best\ column\ to\ move\ on.\ If\ no\ conditions\ are\ met,\ returns\ -1\r\n
comment4.params=amIRed\ columnNumber\ slotNumber\ counterNumber
comment4.target=boolean\ surroundingTokensCheck(boolean,\ int,\ int,\ int)
comment4.text=\r\n\ Checks\ surrounding\ vertical,\ horizontal,\ and\ diagonal\ directions\ from\ the\r\n\ lowest\ empty\ slot\ in\ current\ column\ to\ determine\ if\ there\ is\ a\ win,\ block,\r\n\ next,\ or\ last\ move\ using\ the\ counterNumber\ to\ compare\ the\ number\ of\r\n\ surrounding\ tokens.\r\n\r\n\ @param\ amIRed\ Agent\ Color\r\n\ @param\ columnNumber\ Current\ column\ number\r\n\ @param\ slotNumber\ Current\ slot\ number\r\n\ @param\ counterNumber\ Number\ of\ tokens\ to\ count\ to\r\n\ @return\ True\ if\ win\ move\ is\ found\r\n
comment5.params=amIRed\ counterNumber
comment5.target=int\ getStrategyMove(boolean,\ int)
comment5.text=\r\n\ Finds\ the\ best\ column\ to\ move\ on\ with\ the\ most\ surrounding\ clusters\ of\ tokens.\ May\ be\r\n\ offensive\ or\ defensive\ depending\ on\ the\ color\ passed.\r\n\ Also\ checks\ if\ an\ opponent\ win\ move\ will\ result\ from\ moving\ on\ a\ column\ by\ looking\ at\ slot\r\n\ above\ the\ lowest\ empty\ index.\ If\ a\ win\ move\ for\ the\ opponent\ exists\ on\ that\ slot,\r\n\ will\ not\ move\ on\ that\ column.\r\n\r\n\ @param\ amIRed\ \ \ \ \ \ \ \ Agent\ color\r\n\ @param\ counterNumber\ Number\ of\ tokens\ to\ count\ to\r\n\ @return\ Column\ number\ to\ move\ on\r\n
comment6.params=amIRed\ columnNumber\ slotNumber\ counterNumber
comment6.target=int\ getTokensConnectedCount(boolean,\ int,\ int,\ int)
comment6.text=\r\n\ Checks\ vertical,\ horizontal,\ and\ diagonal\ slots\ from\ the\ lowest\ empty\ slot\ of\ current\r\n\ column\ for\ clusters\ of\ counterNumber\ of\ matching\ color.\r\n\r\n\ @param\ amIRed\ Agent\ Color\r\n\ @param\ columnNumber\ Current\ column\ number\r\n\ @param\ slotNumber\ Current\ slot\ number\r\n\ @param\ counterNumber\ Number\ of\ tokens\ to\ count\ to\r\n\ @return\ Number\ of\ clusters\ of\ tokens\ of\ a\ color.\ Returns\ -1\ if\ no\ clusters\ are\ found.\r\n
comment7.params=amIRed\ columnNumber\ slotNumber\ counterNumber
comment7.target=boolean\ checkVertical(boolean,\ int,\ int,\ int)
comment7.text=\r\n\ Checks\ for\ a\ vertical\ move\ and\ returns\ true\ if\ a\ valid\ vertical\ move\ is\ available.\r\n\ Counts\ the\ number\ of\ tokens\ in\ the\ current\ column\ below\ the\ lowest\ empty\ index\ that\r\n\ match\ the\ agent's\ color.\ The\ number\ of\ tokens\ to\ count\ is\ passed\ in\ with\ counterNumber.\r\n\ If\ counterNumber\ is\ met,\ then\ returns\ true.\r\n\r\n\ @param\ amIRed\ Agent\ color\r\n\ @param\ columnNumber\ Current\ column\ number\r\n\ @param\ slotNumber\ Current\ slot\ number\r\n\ @param\ counterNumber\ Number\ of\ tokens\ to\ count\ to\r\n\ @return\ true\ if\ valid\ vertical\ move\ is\ available\ on\ current\ column\r\n
comment8.params=amIRed\ columnNumber\ slotNumber\ counterNumber
comment8.target=boolean\ checkHorizontal(boolean,\ int,\ int,\ int)
comment8.text=\r\n\ Checks\ for\ a\ horizontal\ move\ and\ returns\ true\ if\ a\ valid\ horizontal\ move\ is\ available.\r\n\ Counts\ the\ number\ of\ tokens\ in\ the\ current\ column\ first\ to\ the\ left,\ then\ to\ the\ right\r\n\ that\ match\ the\ agent's\ color.\ The\ number\ of\ tokens\ to\ count\ is\ passed\ in\ with\ counterNumber.\r\n\ If\ counterNumber\ is\ met,\ then\ returns\ true.\r\n\r\n\ @param\ amIRed\ Agent\ color\r\n\ @param\ columnNumber\ Current\ column\ number\r\n\ @param\ slotNumber\ Current\ slot\ number\r\n\ @param\ counterNumber\ Number\ of\ tokens\ to\ count\ to\r\n\ @return\ true\ if\ valid\ horizontal\ move\ is\ available\ on\ current\ column\r\n
comment9.params=amIRed\ columnNumber\ slotNumber\ counterNumber
comment9.target=boolean\ checkDiagonalForwardSlash(boolean,\ int,\ int,\ int)
comment9.text=\r\n\ Checks\ for\ a\ diagonal\ forward\ slash\ move\ and\ returns\ true\ if\ a\ valid\ diagonal\ forward\ slash\r\n\ move\ is\ available.\ Counts\ the\ number\ of\ tokens\ in\ the\ current\ column\ first\ to\ the\ lower-left,\r\n\ then\ to\ the\ upper-right\ that\ match\ the\ agent's\ color.\ The\ number\ of\ tokens\ to\ count\ is\ passed\r\n\ in\ with\ counterNumber.\ If\ counterNumber\ is\ met,\ then\ returns\ true.\r\n\r\n\ @param\ amIRed\ Agent\ color\r\n\ @param\ columnNumber\ Current\ column\ number\r\n\ @param\ slotNumber\ Current\ slot\ number\r\n\ @param\ counterNumber\ Number\ of\ tokens\ to\ count\ to\r\n\ @return\ true\ if\ diagonal\ forward\ slash(/)\ move\ is\ available\ on\ current\ column\r\n
numComments=20
